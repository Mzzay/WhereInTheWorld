{"version":3,"sources":["components/colors.ts","components/topbar.tsx","components/request.ts","screens/home/index.tsx","screens/details/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["colors","Topbar","mode","setMode","icon","style","backgroundColor","color","className","id","onClick","Countries","Axios","get","res","data","console","log","name","Home","useState","searchValue","setSearchValue","filterOpen","setFilterOpen","filterValue","setFilterValue","countriesData","setCountriesData","correctCountries","setCorrectCountries","loading","setLoading","useEffect","a","getAll","getAllCountries","length","countries","filter","c","region","toLowerCase","substr","size","type","onChange","t","target","value","placeholder","height","width","map","e","CountryComponent","history","useHistory","push","src","flag","alt","population","capital","Details","setData","setError","useParams","getByName","getCountryByCode","goBack","nativeName","subregion","topLevelDomain","currencies","code","join","languages","l","borders","b","i","BorderComponent","country","App","currentMode","setCurrentMode","localStorage","getItem","editMode","setItem","path","exact","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.88c6c0b5.chunk.js","sourcesContent":["export const colors = {\r\n    dark_mode_element: \"hsl(209, 23%, 22%)\",\r\n    dark_mode_background: \"hsl(207, 26%, 17%)\",\r\n    light_mode_text: \"hsl(200, 15%, 8%)\",\r\n    light_mode_input: \"hsl(0, 0%, 52%)\",\r\n    light_mode_background: \"hsl(0, 0%, 98%)\",\r\n    white: \"hsl(0, 0%, 100%)\"\r\n}","import React from 'react'\r\nimport { FaMoon, FaRegMoon } from \"react-icons/fa\"\r\nimport { colors } from './colors'\r\n\r\ninterface Props {\r\n    mode: string;\r\n    setMode: () => void;\r\n}\r\n\r\nexport default function Topbar({ mode , setMode }: Props) {\r\n    const icon = mode === \"light\" ? <FaRegMoon /> : <FaMoon />\r\n    return (\r\n        <header\r\n            style={{\r\n                backgroundColor: mode === \"light\" ?\r\n                    colors.white\r\n                    :\r\n                    colors.dark_mode_element,\r\n                color : mode === \"light\" ?\r\n                    colors.light_mode_text\r\n                    :\r\n                    colors.white\r\n            }}\r\n            className=\"shadow-box\"\r\n        >\r\n            <div id=\"nav\">\r\n                <h1>Where in the world ?</h1>\r\n                <div onClick={setMode} id=\"edit-mode\">\r\n                    <h1>{icon} Dark Mode</h1>\r\n                </div>\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\n","import Axios from \"axios\"\r\n\r\nclass CountryClass {\r\n    async getAll() {\r\n        try {\r\n            const res = await Axios.get('https://restcountries.eu/rest/v2/all')\r\n            return res.data;\r\n        }catch(err) {\r\n            console.log(err)\r\n            return false;\r\n        }\r\n    }\r\n\r\n    async getByName( name:string ) {\r\n        try {\r\n            const res = await Axios.get(`https://restcountries.eu/rest/v2/name/${name}`)\r\n            return res.data;\r\n        }catch(err) {\r\n            console.log(err)\r\n            return false;\r\n        }\r\n    }\r\n}\r\n\r\nconst Countries = new CountryClass()\r\nexport default Countries","import React, { useEffect, useState } from 'react'\r\nimport { FaSearch } from 'react-icons/fa'\r\nimport Loader from 'react-loader-spinner'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { colors } from '../../components/colors'\r\nimport Countries from '../../components/request'\r\nimport { ICountry } from '../../components/types'\r\n\r\ninterface Props {\r\n    mode: string\r\n}\r\n\r\nexport default function Home({ mode }: Props) {\r\n\r\n    const [ searchValue, setSearchValue ] = useState(\"\")\r\n    const [ filterOpen, setFilterOpen ] = useState(false)\r\n    const [ filterValue, setFilterValue ] = useState('')\r\n    const [ countriesData, setCountriesData ] = useState<ICountry[]>([])\r\n    const [ correctCountries, setCorrectCountries ] = useState<ICountry[]>([])\r\n    const [ loading, setLoading ] = useState(true)\r\n\r\n    useEffect(() => {\r\n        const getAllCountries = async () => {\r\n            const data = await Countries.getAll();\r\n            \r\n            if (data) {\r\n                setCountriesData(data);\r\n                setCorrectCountries(data);\r\n                setLoading(false);\r\n            }\r\n        }\r\n        getAllCountries();\r\n    },[])\r\n\r\n    useEffect(() => {\r\n        setFilterOpen(false); \r\n        if (filterValue.length > 0 || searchValue.length > 0) {\r\n            const countries: ICountry[] = [...countriesData].filter(c => {\r\n                if (filterValue.length > 0) {\r\n                    return c.region === filterValue && c.name.toLowerCase().substr(0, searchValue.length) === searchValue.toLowerCase()\r\n                }else{\r\n                    return c.name.toLowerCase().substr(0, searchValue.length) === searchValue.toLowerCase()\r\n                }\r\n            })\r\n            setCorrectCountries(countries)\r\n        }else{\r\n            setCorrectCountries(countriesData)\r\n        }\r\n    },[ filterValue, searchValue, countriesData ])\r\n\r\n\r\n    return (\r\n        <main\r\n            style={{\r\n                color : mode === \"light\" ?\r\n                    colors.light_mode_text\r\n                    :\r\n                    colors.white\r\n            }}\r\n            id=\"home-container\"\r\n        >\r\n            <section className=\"search\">\r\n                <div id=\"input-search\"\r\n                    style={{\r\n                        backgroundColor: mode === \"light\" ?\r\n                            colors.white\r\n                            :\r\n                            colors.dark_mode_element,\r\n                        color : mode === \"light\" ?\r\n                            colors.light_mode_text\r\n                            :\r\n                            colors.white\r\n                    }}\r\n                    className=\"shadow-box\"\r\n                >\r\n                    <FaSearch size={26} />\r\n                    <input type=\"text\" name=\"search\" id=\"search\" onChange={(t) => setSearchValue(t.target.value)} placeholder=\"Search for a country...\" \r\n                        style={{\r\n                            color: mode === \"light\" ?\r\n                                colors.light_mode_input\r\n                                :\r\n                                colors.white\r\n                        }}\r\n                    />\r\n                </div>\r\n                <div>\r\n                   <div\r\n                        className=\"filter-box shadow-box\" \r\n                        style={{\r\n                            backgroundColor: mode === \"light\" ? colors.white : colors.dark_mode_element\r\n                        }}\r\n                   >\r\n                        <div onClick={() => setFilterOpen(!filterOpen)} className=\"filter-button\">\r\n                            <p>{\r\n                                filterValue.length > 0 ? filterValue : \"Filter by Region\"\r\n                                }</p>\r\n                        </div>\r\n                        {\r\n                            filterOpen && <div \r\n                                className=\"filter-options shadow-box\"\r\n                                style={{\r\n                                    backgroundColor: mode === \"light\" ? colors.white : colors.dark_mode_element\r\n                                }}\r\n                            >\r\n                                <li onClick={() => setFilterValue(\"Africa\")}>Africa</li>\r\n                                <li onClick={() => setFilterValue(\"Americas\")}>Americas</li>\r\n                                <li onClick={() => setFilterValue(\"Asia\")}>Asia</li>\r\n                                <li onClick={() => setFilterValue(\"Europe\")}>Europe</li>\r\n                                <li onClick={() => setFilterValue(\"Oceania\")}>Oceania</li>\r\n                            </div>\r\n                        }\r\n                   </div>\r\n                </div>\r\n            </section>\r\n            <section className=\"country-container\">\r\n                {\r\n                    loading ? <div className=\"align-center\">\r\n                        <Loader\r\n                            type=\"ThreeDots\"\r\n                            color={ mode === \"light\" ? colors.dark_mode_background : colors.white }\r\n                            height={100}\r\n                            width={100}\r\n                        />\r\n                    </div> :\r\n                        correctCountries.map((e: ICountry) => {\r\n                            return <CountryComponent key={e.name} data={e} mode={mode} />\r\n                        })\r\n                }\r\n            </section>\r\n        </main>\r\n    )\r\n}\r\n\r\n\r\nfunction CountryComponent({ data, mode }: { data: ICountry, mode: string }) {\r\n    const history = useHistory()\r\n\r\n    return <div\r\n            className=\"country-box shadow-box\"\r\n            style={{ backgroundColor: mode === \"light\" ? colors.white : colors.dark_mode_element }}\r\n            onClick={() => history.push(`/${data.name}`)}\r\n        >\r\n        <div className=\"img-container\">\r\n            <img src={data.flag} alt={`flag ${data.name}`} />\r\n        </div>\r\n        <div className=\"info\">\r\n            <p className=\"name\">{data.name}</p>\r\n            <p className=\"sub-info\"><span>Population:</span> {data.population}</p>\r\n            <p className=\"sub-info\"><span>Region:</span> {data.region}</p>\r\n            <p className=\"sub-info\"><span>Capital:</span> {data.capital}</p>\r\n        </div>\r\n    </div>\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { FaArrowLeft } from 'react-icons/fa'\r\nimport { useHistory, useParams } from 'react-router-dom'\r\nimport { colors } from '../../components/colors'\r\nimport Countries from '../../components/request'\r\nimport { ICountry } from '../../components/types'\r\n\r\ninterface Props {\r\n    mode : string;\r\n}\r\n\r\nexport default function Details({ mode }: Props) {\r\n\r\n    const [ data, setData ] = useState<ICountry | null>(null)\r\n    const [ error, setError ] = useState(false)\r\n    const { name }: { name: string } = useParams()\r\n    const history = useHistory()\r\n\r\n    useEffect(() => {\r\n        const getCountryByCode = async () => {\r\n            const res: ICountry[] = await Countries.getByName(name)\r\n            console.log(res)\r\n            if (res) {\r\n                setData(res[0])\r\n            }else{\r\n                setError(true)\r\n            }\r\n        }\r\n        getCountryByCode()\r\n    },[name])\r\n\r\n    return (\r\n        <main className=\"details-container\">\r\n            <div className=\"back-button shadow-box\"\r\n                onClick={() => history.goBack()}\r\n                style={{\r\n                        color : mode === \"light\" ? colors.dark_mode_element : colors.white,\r\n                        backgroundColor: mode === \"light\" ? colors.white : colors.dark_mode_element\r\n                    }}>\r\n                <p><FaArrowLeft size={23} /> Back</p>\r\n            </div>\r\n            <section>\r\n                <div className=\"flag-container\">\r\n                    <img src={data?.flag} alt={data?.name} />\r\n                </div>\r\n                <div\r\n                    className=\"info-container\"\r\n                    style={{\r\n                        color : mode === \"light\" ? colors.dark_mode_background : colors.white,\r\n                    }}\r\n                >\r\n                    <h2>{data?.name}</h2>\r\n                    <div className=\"info-content\">\r\n                        <div className=\"info-left\">\r\n                            <p><span>Native Name: </span>{data?.nativeName}</p>\r\n                            <p><span>Population: </span>{data?.population}</p>\r\n                            <p><span>Region: </span>{data?.region}</p>\r\n                            <p><span>Sub Region: </span>{data?.subregion}</p>\r\n                            <p><span>Capital: </span>{data?.capital}</p>\r\n                        </div>\r\n                        <div className=\"info-right\">\r\n                            <p><span>Top Level Domain: </span>{data?.topLevelDomain}</p>\r\n                            <p><span>Currencies: </span>{data?.currencies.map(c => c.code).join(',')}</p>\r\n                            <p><span>Currencies: </span>{data?.languages.map(l => l.name).join(',')}</p>\r\n                        </div>\r\n                    </div>\r\n                    {\r\n                        data?.borders && data.borders.length > 0  && (\r\n                            <div className=\"info-content\">\r\n                                <p id=\"border-subtitle\">Border Countries: </p>\r\n                                <div className=\"border-container\">\r\n                                    {\r\n                                        data?.borders.map((b: string, i: number) => {\r\n                                            return <BorderComponent country={b} key={i} mode={mode} />\r\n                                        })\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    }\r\n                </div>\r\n            </section>\r\n        </main>\r\n    )\r\n}\r\n\r\nfunction BorderComponent({ country, mode }: { country: string, mode: string }) {\r\n    return (\r\n        <div className=\"name-country-box shadow-box\"\r\n            style={{ backgroundColor: mode === \"light\" ? colors.white : colors.dark_mode_element, color: mode === \"light\" ? colors.dark_mode_element : colors.white }}\r\n        >\r\n            { country }\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react';\nimport './App.css';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\"\nimport Topbar from './components/topbar';\nimport Home from './screens/home';\nimport { colors } from './components/colors';\nimport Details from './screens/details';\n\n\nfunction App() {\n\n  const [ currentMode, setCurrentMode ] = useState(\"light\")\n\n  useEffect(() => {\n    let mode = localStorage.getItem('@mode')\n    if (!mode) return;\n\n    setCurrentMode(mode)\n  },[])\n\n  // set mode\n  function setMode() {\n    let editMode\n    if (currentMode === \"light\") {\n      editMode = \"dark\"\n    }else{\n      editMode = \"light\"\n    }\n\n    // set in localstorage\n    localStorage.setItem('@mode', editMode)\n    setCurrentMode(editMode)\n  }\n\n  return (\n    <Router>\n      <div id=\"all-container\" style={{\n        backgroundColor: currentMode === \"light\" ? colors.light_mode_background : colors.dark_mode_background\n      }}>\n      <Topbar setMode={setMode} mode={currentMode} />\n      <Switch>\n        <Route\n          path=\"/\"\n          exact\n          render={() => <Home mode={currentMode} />}\n          mode={currentMode}\n        />\n        <Route\n          path=\"/:name\"\n          render={() => <Details mode={currentMode} />}\n          mode={currentMode}\n        />\n      </Switch>\n      \n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}